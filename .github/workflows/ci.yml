name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pywin32-ctypes
        pip install pywin32
        pip install PyQt6-Qt6==6.6.1
        pip install PyQt6-sip==13.6.0
        
    - name: Get PyQt6 path
      id: pyqt6-path
      run: |
        $pyqt6_path = python -c "import os, PyQt6; print(os.path.dirname(PyQt6.__file__))"
        echo "PYQT6_PATH=$pyqt6_path" >> $env:GITHUB_ENV
        
    - name: Create runtime hook
      run: |
        mkdir hooks
        Set-Content -Path hooks/rthook.py -Value @'
        import os
        import sys
        import PyQt6

        if hasattr(sys, '_MEIPASS'):
            os.environ['QT_PLUGIN_PATH'] = os.path.join(sys._MEIPASS, 'PyQt6', 'Qt6', 'plugins')
            os.environ['QT_QPA_PLATFORM_PLUGIN_PATH'] = os.path.join(sys._MEIPASS, 'PyQt6', 'Qt6', 'plugins', 'platforms')
        '@
        
    - name: Build Windows executable
      shell: cmd
      run: >-
        pyinstaller --name "Sky Folder Selector" --windowed
        --hidden-import PyQt6.sip
        --hidden-import PyQt6.QtCore
        --hidden-import PyQt6.QtGui
        --hidden-import PyQt6.QtWidgets
        --exclude-module matplotlib
        --exclude-module numpy
        --exclude-module PIL
        --exclude-module pandas
        --exclude-module scipy
        --exclude-module PyQt6.QtNetwork
        --exclude-module PyQt6.QtQml
        --exclude-module PyQt6.QtQuick
        --exclude-module PyQt6.QtSql
        --exclude-module PyQt6.QtTest
        --exclude-module PyQt6.QtMultimedia
        --add-data "assets/icons/icon.ico;."
        --icon assets/icons/icon.ico
        --add-binary "%PYQT6_PATH%\Qt6\plugins\platforms\qwindows.dll;PyQt6\Qt6\plugins\platforms"
        --add-binary "%PYQT6_PATH%\Qt6\plugins\styles\qwindowsvistastyle.dll;PyQt6\Qt6\plugins\styles"
        --add-binary "%PYQT6_PATH%\Qt6\bin\Qt6Core.dll;PyQt6\Qt6\bin"
        --add-binary "%PYQT6_PATH%\Qt6\bin\Qt6Gui.dll;PyQt6\Qt6\bin"
        --add-binary "%PYQT6_PATH%\Qt6\bin\Qt6Widgets.dll;PyQt6\Qt6\bin"
        --runtime-hook "hooks/rthook.py"
        --onefile
        --clean
        --noconfirm
        sky_folder_selector.py
        
    - name: List build output
      run: dir dist
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/Sky Folder Selector.exe
        retention-days: 5
        compression-level: 9

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Clean previous builds
      run: |
        rm -rf build dist
        rm -f *.spec
        
    - name: Get PyQt6 path
      id: pyqt6-path
      run: |
        PYQT6_PATH=$(python -c "import os, PyQt6; print(os.path.dirname(PyQt6.__file__))")
        QT_PATH=$(python -c "from PyQt6.QtCore import QLibraryInfo; print(QLibraryInfo.path(QLibraryInfo.LibraryPath.LibrariesPath))")
        echo "PYQT6_PATH=$PYQT6_PATH" >> $GITHUB_ENV
        echo "QT_PATH=$QT_PATH" >> $GITHUB_ENV
        
    - name: Create runtime hook
      run: |
        mkdir -p hooks
        cat > hooks/rthook.py << EOF
        import os
        import sys
        import PyQt6
        from PyQt6.QtCore import QLibraryInfo

        if hasattr(sys, '_MEIPASS'):
            qt_path = os.path.join(sys._MEIPASS, 'PyQt6', 'Qt6')
            os.environ['QT_PLUGIN_PATH'] = os.path.join(qt_path, 'plugins')
            os.environ['QT_QPA_PLATFORM_PLUGIN_PATH'] = os.path.join(qt_path, 'plugins', 'platforms')
            os.environ['DYLD_FRAMEWORK_PATH'] = os.path.join(qt_path, 'lib')
            os.environ['DYLD_LIBRARY_PATH'] = os.path.join(qt_path, 'lib')
        EOF
        
    - name: Build macOS app
      run: |
        echo "Starting build process..."
        pyinstaller --name "Sky Folder Selector" \
          --windowed \
          --hidden-import PyQt6.sip \
          --hidden-import PyQt6.QtCore \
          --hidden-import PyQt6.QtGui \
          --hidden-import PyQt6.QtWidgets \
          --exclude-module matplotlib \
          --exclude-module numpy \
          --exclude-module PIL \
          --exclude-module pandas \
          --exclude-module scipy \
          --exclude-module PyQt6.QtNetwork \
          --exclude-module PyQt6.QtQml \
          --exclude-module PyQt6.QtQuick \
          --exclude-module PyQt6.QtSql \
          --exclude-module PyQt6.QtTest \
          --exclude-module PyQt6.QtMultimedia \
          --add-data "assets/icons/icon.icns:." \
          --add-data "entitlements.plist:." \
          --icon assets/icons/icon.icns \
          --target-arch arm64 \
          --osx-bundle-identifier "com.sky.folder.selector" \
          --add-binary "${PYQT6_PATH}/Qt6/plugins/platforms/libqcocoa.dylib:PyQt6/Qt6/plugins/platforms/" \
          --add-binary "${PYQT6_PATH}/Qt6/plugins/styles/libqmacstyle.dylib:PyQt6/Qt6/plugins/styles/" \
          --add-binary "${QT_PATH}/QtCore.framework/Versions/A/QtCore:PyQt6/Qt6/lib/QtCore" \
          --add-binary "${QT_PATH}/QtGui.framework/Versions/A/QtGui:PyQt6/Qt6/lib/QtGui" \
          --add-binary "${QT_PATH}/QtWidgets.framework/Versions/A/QtWidgets:PyQt6/Qt6/lib/QtWidgets" \
          --runtime-hook "hooks/rthook.py" \
          --onefile \
          --clean \
          --noconfirm \
          sky_folder_selector.py
        
        echo "Creating app bundle structure..."
        APP_DIR="dist/Sky Folder Selector.app"
        mkdir -p "$APP_DIR/Contents/"{MacOS,Resources,Frameworks}
        
        echo "Copying files to app bundle..."
        mv "dist/Sky Folder Selector" "$APP_DIR/Contents/MacOS/"
        cp "assets/icons/icon.icns" "$APP_DIR/Contents/Resources/"
        cp "entitlements.plist" "$APP_DIR/Contents/Resources/"
        
        echo "Creating Info.plist..."
        cat > "$APP_DIR/Contents/Info.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleDisplayName</key>
            <string>Sky Folder Selector</string>
            <key>CFBundleExecutable</key>
            <string>Sky Folder Selector</string>
            <key>CFBundleIconFile</key>
            <string>icon.icns</string>
            <key>CFBundleIdentifier</key>
            <string>com.sky.folder.selector</string>
            <key>CFBundleInfoDictionaryVersion</key>
            <string>6.0</string>
            <key>CFBundleName</key>
            <string>Sky Folder Selector</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>LSMinimumSystemVersion</key>
            <string>10.15</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>LSApplicationCategoryType</key>
            <string>public.app-category.utilities</string>
            <key>NSPrincipalClass</key>
            <string>NSApplication</string>
            <key>NSAppleEventsUsageDescription</key>
            <string>需要访问文件夹权限以打开截图和录屏目录。</string>
            <key>NSDesktopFolderUsageDescription</key>
            <string>需要访问桌面文件夹权限。</string>
            <key>NSDocumentsFolderUsageDescription</key>
            <string>需要访问文档文件夹权限。</string>
            <key>NSDownloadsFolderUsageDescription</key>
            <string>需要访问下载文件夹权限。</string>
        </dict>
        </plist>
        EOF

        echo "Signing the application..."
        codesign --force --deep --sign - --entitlements entitlements.plist --options runtime "$APP_DIR"
        
        echo "Creating DMG..."
        mkdir -p dist/dmg
        mv "$APP_DIR" dist/dmg/
        hdiutil create -volname "Sky Folder Selector" -srcfolder dist/dmg -ov -format UDZO "dist/Sky Folder Selector.dmg"
        
        echo "Signing DMG..."
        codesign --force --sign - "dist/Sky Folder Selector.dmg"
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/Sky Folder Selector.dmg
        retention-days: 5
        compression-level: 9

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/windows
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/macos
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./dist/windows/Sky Folder Selector.exe
          ./dist/macos/Sky Folder Selector.dmg
        name: Sky Folder Selector ${{ github.ref_name }}
        body: |
          # Sky Folder Selector ${{ github.ref_name }}
          
          Sky Folder Selector 是一个简单易用的文件夹选择工具，基于 PyQt6 开发，支持 Windows 和 macOS 平台。
          
          ## 功能特点
          - 简洁的图形界面
          - 支持文件夹选择
          - 跨平台支持（Windows/macOS）
          
          ## 更新内容
          - 初始版本发布
          - 支持 Windows 和 macOS 平台
          - 优化了构建配置，确保所有依赖正确打包
          - 添加了必要的系统权限配置
          - 添加了应用程序图标
          
          ## 使用说明
          1. 下载对应平台的安装包
          2. 运行安装程序
          3. 选择需要处理的文件夹
          
          ## 系统要求
          - Windows 10 或更高版本
          - macOS 10.15 或更高版本
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 