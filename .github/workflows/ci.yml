name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.10.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        check-latest: true
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller==6.3.0
        pip install pywin32-ctypes==0.2.2
        if: matrix.os == 'windows-latest'
        pip install pywin32==306
    
    - name: Build Windows executable
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        echo "Python version:"
        python --version
        echo "Current directory:"
        cd
        echo "Directory contents:"
        dir
        
        REM 显示 PyInstaller 版本
        pyinstaller --version
        
        REM 构建可执行文件
        pyinstaller --name "Sky Folder Selector" ^
                   --windowed ^
                   --onefile ^
                   --clean ^
                   --noconfirm ^
                   --icon "assets/icons/icon.ico" ^
                   --log-level DEBUG ^
                   sky_folder_selector.py
        
        echo "Build complete, checking dist directory:"
        dir dist
        
        REM 如果文件存在则压缩
        if exist "dist\Sky Folder Selector.exe" (
            echo "Executable found, creating zip file..."
            cd dist
            powershell -Command "Compress-Archive -Path 'Sky Folder Selector.exe' -DestinationPath 'Sky Folder Selector Windows.zip' -Force"
            cd ..
        ) else (
            echo "ERROR: Executable not found in dist directory"
            echo "Contents of current directory:"
            dir
            echo "Contents of dist directory:"
            dir dist
            exit 1
        )
    
    - name: Build macOS app
      if: matrix.os == 'macos-latest'
      run: |
        echo "Python version:"
        python --version
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Starting build process..."
        pyinstaller --name "Sky Folder Selector" \
                   --windowed \
                   --onefile \
                   --clean \
                   --noconfirm \
                   --icon "assets/icons/icon.icns" \
                   --add-data "assets/icons/icon.icns:." \
                   sky_folder_selector.py
        
        # 创建 .app 包
        mkdir -p "dist/Sky Folder Selector.app/Contents/MacOS"
        mkdir -p "dist/Sky Folder Selector.app/Contents/Resources"
        
        # 移动可执行文件
        mv "dist/Sky Folder Selector" "dist/Sky Folder Selector.app/Contents/MacOS/"
        
        # 复制图标
        cp "assets/icons/icon.icns" "dist/Sky Folder Selector.app/Contents/Resources/"
        
        # 创建 Info.plist
        cat > "dist/Sky Folder Selector.app/Contents/Info.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>Sky Folder Selector</string>
            <key>CFBundleIconFile</key>
            <string>icon.icns</string>
            <key>CFBundleIdentifier</key>
            <string>com.sky.folderselector</string>
            <key>CFBundleName</key>
            <string>Sky Folder Selector</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>LSMinimumSystemVersion</key>
            <string>10.13.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>NSRequiresAquaSystemAppearance</key>
            <false/>
            <key>LSApplicationCategoryType</key>
            <string>public.app-category.utilities</string>
            <key>NSAppleEventsUsageDescription</key>
            <string>需要访问文件夹权限以打开截图和录屏目录。</string>
            <key>NSDesktopFolderUsageDescription</key>
            <string>需要访问桌面文件夹权限。</string>
            <key>NSDocumentsFolderUsageDescription</key>
            <string>需要访问文档文件夹权限。</string>
            <key>NSDownloadsFolderUsageDescription</key>
            <string>需要访问下载文件夹权限。</string>
        </dict>
        </plist>
        EOF
        
        # 创建 entitlements.plist
        cat > "entitlements.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.app-sandbox</key>
            <true/>
            <key>com.apple.security.files.user-selected.read-write</key>
            <true/>
            <key>com.apple.security.files.downloads.read-write</key>
            <true/>
            <key>com.apple.security.files.desktop.read-write</key>
            <true/>
            <key>com.apple.security.files.documents.read-write</key>
            <true/>
            <key>com.apple.security.automation.apple-events</key>
            <true/>
            <key>com.apple.security.cs.allow-jit</key>
            <true/>
            <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
            <true/>
            <key>com.apple.security.cs.disable-library-validation</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # 创建自签名证书
        security create-keychain -p github_actions build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p github_actions build.keychain
        security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

        # 创建证书
        CERT_NAME="Sky Folder Selector Developer"
        CERT_PATH="$CERT_NAME.p12"
        
        # 创建自签名证书
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout private.key -out certificate.pem \
          -subj "/CN=$CERT_NAME/O=Sky Folder Selector/C=CN"
        
        # 转换为 PKCS#12 格式
        openssl pkcs12 -export -out "$CERT_PATH" \
          -inkey private.key -in certificate.pem \
          -name "$CERT_NAME" -passout pass:github_actions
        
        # 导入证书到钥匙串
        security import "$CERT_PATH" -k build.keychain -P github_actions \
          -T /usr/bin/codesign
        
        # 设置钥匙串权限
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s \
          -k github_actions build.keychain
        
        # 签名应用程序
        codesign --force --options runtime --deep --sign "$CERT_NAME" \
          --entitlements entitlements.plist "dist/Sky Folder Selector.app"
        
        # 验证签名
        codesign --verify --deep --strict --verbose=2 "dist/Sky Folder Selector.app"
        
        # 压缩应用程序
        cd dist
        zip -r "Sky Folder Selector macOS.zip" "Sky Folder Selector.app"
        cd ..
    
    - name: Upload Windows artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/Sky Folder Selector Windows.zip
        retention-days: 5
    
    - name: Upload macOS artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/Sky Folder Selector macOS.zip
        retention-days: 5

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/windows
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/macos
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/windows/Sky Folder Selector Windows.zip
          dist/macos/Sky Folder Selector macOS.zip
        name: Sky Folder Selector ${{ github.ref_name }}
        body: |
          # Sky Folder Selector ${{ github.ref_name }}
          
          Sky Folder Selector 是一个简单易用的文件夹选择工具，支持 Windows 和 macOS 平台。
          
          ## 功能特点
          - 简洁的图形界面
          - 支持文件夹选择
          - 跨平台支持（Windows/macOS）
          
          ## 更新内容
          - 初始版本发布
          - 支持 Windows 和 macOS 平台
          - 优化了构建配置，确保所有依赖正确打包
          - 添加了必要的系统权限配置
          - 添加了应用程序图标
          
          ## 使用说明
          1. 下载对应平台的安装包
          2. 运行程序
          3. 选择需要处理的文件夹
          
          ## 系统要求
          - Windows 10 或更高版本
          - macOS 10.13 或更高版本
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 